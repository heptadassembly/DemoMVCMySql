//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoMVCMySql
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class samsjacksonvilleEntities : DbContext
    {
        public samsjacksonvilleEntities()
            : base("name=samsjacksonvilleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<profile> profiles { get; set; }
        public DbSet<student> students { get; set; }
    
        public virtual ObjectResult<profile> ProfileLogin(string tryUserID, string tryPassword)
        {
            var tryUserIDParameter = tryUserID != null ?
                new ObjectParameter("tryUserID", tryUserID) :
                new ObjectParameter("tryUserID", typeof(string));
    
            var tryPasswordParameter = tryPassword != null ?
                new ObjectParameter("tryPassword", tryPassword) :
                new ObjectParameter("tryPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<profile>("ProfileLogin", tryUserIDParameter, tryPasswordParameter);
        }
    
        public virtual ObjectResult<profile> ProfileLogin(string tryUserID, string tryPassword, MergeOption mergeOption)
        {
            var tryUserIDParameter = tryUserID != null ?
                new ObjectParameter("tryUserID", tryUserID) :
                new ObjectParameter("tryUserID", typeof(string));
    
            var tryPasswordParameter = tryPassword != null ?
                new ObjectParameter("tryPassword", tryPassword) :
                new ObjectParameter("tryPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<profile>("ProfileLogin", mergeOption, tryUserIDParameter, tryPasswordParameter);
        }
    }
}
